package in.ashokit.service;

import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationCredentialsNotFoundException;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import in.ashokit.entity.User;
import in.ashokit.repo.UserRepo;
import in.ashokit.utils.FileUtils;

@Service
public class UserServiceImpl implements UserService, UserDetailsService {
	@Autowired
	private UserRepo userrepo;
	
	@Autowired
	private PasswordEncoder pwdEncoder;
	
	@Autowired
	private AuthenticationManager authManager;

	@Override
	public User addUser(User user, MultipartFile file)  throws Exception{
		String fileName = FileUtils.saveFile(file.getName(), file);
		String encodePwd = pwdEncoder.encode(user.getPwd());
		user.setPwd(encodePwd);
		user.setFname(fileName);
		return userrepo.save(user);
	}

	@Override
	public User login(User user) {
		UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken(user.getEmail(),user.getPwd());
		Authentication authenticate = authManager.authenticate(token);
		if(authenticate.isAuthenticated()) {
			return userrepo.findByEmail(user.getEmail());
		}else {
			throw new AuthenticationCredentialsNotFoundException("Invalid Credentials");
			
		}
	}

	@Override
	public User getUserById(Integer userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<User> getAllUsers() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public User deleteUserById(Integer userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
		User u=userrepo.findByEmail(email);
		return new org.springframework.security.core.userdetails.User(u.getEmail(),u.getPwd(), Collections.emptyList());
	}

}
